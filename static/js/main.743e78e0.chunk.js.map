{"version":3,"sources":["components/ContactForm/ContactForm.syled.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Box.js","components/App.js","index.js"],"names":["FormLable","styled","label","FormButton","button","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","addContact","preventDefault","props","onSubmit","reset","this","onChange","type","pattern","title","required","Component","Item","ul","ItemText","li","ItemButton","ContactItem","id","onDeleteContact","onClick","List","ContactList","contacts","map","FilterLable","FilterInput","input","Filter","placeholder","Box","color","space","layout","flexbox","grid","background","border","position","App","filter","contact","uuidv4","normolizedName","toLowerCase","find","alert","changeFilter","getVisibleContacts","normolizedFiter","includes","deleteContact","contactId","prevState","visibleContacts","display","alignItems","flexDirection","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.743e78e0.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FormLable = styled.label`\n\tfont-size: 20px;\n\tmargin: 10px;\n\tpadding: 5px;\n\ttext-decoration: solid;\n\tcolor: rgb(107, 41, 41);\n`;\n\nexport const FormButton = styled.button`\n\tmargin-left: 20px;\n\tborder-radius: 10px;\n\tpadding: 5px 15px;\n\tbackground-color: rgb(236, 145, 145);\n\tcursor: pointer;\n`;\n","import React, { Component } from 'react';\nimport { FormButton } from './ContactForm.syled';\nimport { FormLable } from './ContactForm.syled';\n\nclass ContactForm extends Component {\n\tstate = {\n\t\tname: '',\n\t\tnumber: '',\n\t};\n\n\thandleChange = e => {\n\t\tconst { name, value } = e.currentTarget;\n\t\tthis.setState({ [name]: value });\n\t};\n\n\taddContact = e => {\n\t\te.preventDefault();\n\t\tthis.props.onSubmit(this.state);\n\t\tthis.reset();\n\t};\n\n\treset = () => {\n\t\tthis.setState({\n\t\t\tname: '',\n\t\t\tnumber: '',\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.addContact}>\n\t\t\t\t<FormLable>\n\t\t\t\t\tName:\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormLable>\n\n\t\t\t\t<FormLable>\n\t\t\t\t\tTel:\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={this.state.number}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\t\ttitle=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormLable>\n\t\t\t\t<FormButton type=\"submit\">Add contact</FormButton>\n\t\t\t</form>\n\t\t);\n\t}\n}\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Item = styled.ul`\n\tmargin: 10px;\n\ttext-decoration: underline;\n`;\nexport const ItemText = styled.li`\n\tcolor: #1750b0;\n\tmargin-top: 10px;\n`;\nexport const ItemButton = styled.button`\n\ttext-align: center;\n\tmargin-top: 30px;\n\tborder-radius: 10px;\n\tpadding: 5px 15px;\n\tbackground-color: rgb(236, 145, 145);\n\tcursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { Item } from './ContactItem.styled';\nimport { ItemText } from './ContactItem.styled';\nimport { ItemButton } from './ContactItem.styled';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\n\t<Item>\n\t\t<ItemText>{name}</ItemText>\n\t\t<ItemText>{number}</ItemText>\n\t\t<ItemButton onClick={() => onDeleteContact(id)}>Delete</ItemButton>\n\t</Item>\n);\n\nContactItem.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tnumber: PropTypes.string.isRequired,\n\tonDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n\tdisplay: flex;\n`;\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n\t<List>\n\t\t{contacts.map(({ id, name, number }) => (\n\t\t\t<ContactItem\n\t\t\t\tkey={id}\n\t\t\t\tid={id}\n\t\t\t\tname={name}\n\t\t\t\tnumber={number}\n\t\t\t\tonDeleteContact={onDeleteContact}\n\t\t\t/>\n\t\t))}\n\t</List>\n);\n\nContactList.propTypes = {\n\tcontacts: PropTypes.array.isRequired,\n\tonDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterLable = styled.label`\n\ttext-align: center;\n\tcolor: red;\n`;\n\nexport const FilterInput = styled.input`\n\ttext-align: center;\n\tmargin-right: 10px;\n\tmargin-left: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { FilterLable } from './Filter.styled';\nimport { FilterInput } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => (\n\t<FilterLable>\n\t\tFind contacts by name\n\t\t<FilterInput\n\t\t\ttype=\"text\"\n\t\t\tvalue={value}\n\t\t\tonChange={onChange}\n\t\t\tplaceholder=\"Name contact\"\n\t\t/>\n\t</FilterLable>\n);\n\nFilter.propTypes = {\n\tvalue: PropTypes.string,\n\tonChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport {\n\tcolor,\n\tspace,\n\tlayout,\n\tflexbox,\n\tgrid,\n\tbackground,\n\tborder,\n\tposition,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n\tcolor,\n\tspace,\n\tlayout,\n\tflexbox,\n\tgrid,\n\tbackground,\n\tborder,\n\tposition,\n);\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Box } from './Box';\n\nclass App extends Component {\n\tstate = {\n\t\tcontacts: [\n\t\t\t{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n\t\t\t{ id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n\t\t\t{ id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n\t\t\t{ id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n\t\t],\n\t\tfilter: '',\n\t\tname: '',\n\t\tnumber: '',\n\t};\n\n\taddContact = ({ name, number }) => {\n\t\tconst contact = {\n\t\t\tid: uuidv4(),\n\t\t\tname,\n\t\t\tnumber,\n\t\t};\n\n\t\tconst normolizedName = name.toLowerCase();\n\t\tif (\n\t\t\tthis.state.contacts.find(\n\t\t\t\tcontact => contact.name.toLowerCase() === normolizedName,\n\t\t\t)\n\t\t) {\n\t\t\treturn alert(`${name} is already in contacts`);\n\t\t}\n\n\t\tthis.setState(({ contacts }) => ({\n\t\t\tcontacts: [contact, ...contacts],\n\t\t}));\n\t};\n\n\tchangeFilter = e => {\n\t\tthis.setState({ filter: e.currentTarget.value });\n\t};\n\n\tgetVisibleContacts = () => {\n\t\tconst { contacts, filter } = this.state;\n\t\tconst normolizedFiter = filter.toLowerCase();\n\t\treturn contacts.filter(contact =>\n\t\t\tcontact.name.toLowerCase().includes(normolizedFiter),\n\t\t);\n\t};\n\n\tdeleteContact = contactId => {\n\t\tthis.setState(prevState => ({\n\t\t\tcontacts: prevState.contacts.filter(contact => contact.id !== contactId),\n\t\t}));\n\t};\n\n\trender() {\n\t\tconst visibleContacts = this.getVisibleContacts();\n\t\treturn (\n\t\t\t<Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n\t\t\t\t<Box>\n\t\t\t\t\t<h1>Phonebook</h1>\n\t\t\t\t\t<ContactForm onSubmit={this.addContact} />\n\t\t\t\t</Box>\n\t\t\t\t<h2>Contacts </h2>\n\t\t\t\t<Filter value={this.filter} onChange={this.changeFilter} />\n\t\t\t\t<ContactList\n\t\t\t\t\tcontacts={visibleContacts}\n\t\t\t\t\tonDeleteContact={this.deleteContact}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}